apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    app: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      serviceAccountName: status-page-sa
      containers:
      - name: web
        image: 992382545251.dkr.ecr.us-east-1.amazonaws.com/status-page:v13
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash", "-c"]
        args:
          - |
            echo "Setting up Status Page application..."
            # Copy our custom configuration
            cp /config/configuration.py /app/statuspage/statuspage/configuration.py
            # Update password in configuration
            sed -i "s/'PASSWORD': '',/'PASSWORD': '${POSTGRES_PASSWORD}',/" /app/statuspage/statuspage/configuration.py

            # Create a custom gunicorn config
            cat > /app/statuspage/gunicorn.py << 'EOF'
bind = '0.0.0.0:8001'
workers = 5
threads = 3
timeout = 120
max_requests = 5000
max_requests_jitter = 500
EOF

            # Wait for PostgreSQL
            echo "Waiting for PostgreSQL..."
            until pg_isready -h $DB_HOST -p 5432; do
              echo "PostgreSQL not ready, waiting..."
              sleep 2
            done
            echo "PostgreSQL is ready!"

            # Test Redis connection without auth
            echo "Testing Redis connection..."
            redis-cli -h $REDIS_HOST -p 6379 ping
            echo "Redis connection test completed"

            # Go to app directory
            cd /app/statuspage

            # Run Django setup
            echo "Running Django migrations..."
            python manage.py migrate --run-syncdb
            echo "Collecting static files..."
            python manage.py collectstatic --noinput

            # Start Gunicorn
            echo "Starting Gunicorn..."
            exec gunicorn -c gunicorn.py statuspage.wsgi:application
        ports:
        - containerPort: 8001
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: status-page-secrets
              key: POSTGRES_PASSWORD
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: status-page-secrets
              key: POSTGRES_PASSWORD
        - name: SERVICE_NAME
          value: "web"
        - name: DB_HOST
          value: "benami-postgres.cx248m4we6k7.us-east-1.rds.amazonaws.com"
        - name: REDIS_HOST
          value: "benami-redis.7fftml.ng.0001.use1.cache.amazonaws.com"
        - name: DJANGO_RQ_REDIS_URL
          value: "redis://benami-redis.7fftml.ng.0001.use1.cache.amazonaws.com:6379/0"
        - name: RQ_REDIS_URL
          value: "redis://benami-redis.7fftml.ng.0001.use1.cache.amazonaws.com:6379/0"
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
      - name: config
        configMap:
          name: status-page-config
