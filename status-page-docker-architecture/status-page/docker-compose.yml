version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: statuspage
      POSTGRES_USER: statuspage
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U statuspage"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./status-page/statuspage/static:/app/static
    depends_on:
      - web

  web:
    build: .
    command: gunicorn --config /app/gunicorn.py statuspage.wsgi
    expose:
      - "8000"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SERVICE_NAME=web
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  scheduler:
    build: .
    command: python3 statuspage/manage.py rqscheduler
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SERVICE_NAME=scheduler
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  worker:
    build: .
    command: python3 statuspage/manage.py rqworker high default low
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SERVICE_NAME=worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data: