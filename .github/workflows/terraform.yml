    name: "Terraform CI/CD"

    on:
      push:
        branches:
          - main # Trigger on pushes to the main branch
        paths:
          - 'terraform/**' # Only run if changes are in the terraform directory
      pull_request:
        branches:
          - main # Trigger on pull requests targeting the main branch
        paths:
          - 'terraform/**'

    env:
      AWS_REGION: us-east-1
      TF_VERSION: '1.5.0'

    jobs:
      terraform:
        runs-on: ubuntu-latest # Specify the runner environment
        steps:
          - name: Checkout code
            uses: actions/checkout@v4 # Action to checkout your repository code

          - name: Setup Terraform
            uses: hashicorp/setup-terraform@v3 # Action to set up Terraform CLI
            with:
              terraform_version: ${{ env.TF_VERSION }}

          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ env.AWS_REGION }}

          - name: Terraform Init
            id: init
            run: terraform init
            working-directory: ./terraform # Specify the directory containing your Terraform files

          - name: Terraform Format Check
            id: fmt
            run: terraform fmt -check
            working-directory: ./terraform

          - name: Terraform Validate
            id: validate
            run: terraform validate
            working-directory: ./terraform

          - name: Terraform Plan
            id: plan
            if: github.event_name == 'pull_request' # Only run plan on pull requests
            run: terraform plan -no-color -input=false
            working-directory: ./terraform

          - name: Terraform Apply
            id: apply
            if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only apply on pushes to main
            run: terraform apply -auto-approve -input=false
            working-directory: ./terraform
