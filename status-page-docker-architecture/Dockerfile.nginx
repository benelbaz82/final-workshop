# Multi-stage build for custom nginx image with baked static files

# First stage: Build the app and collect static files
FROM python:3.10-slim AS builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    libxml2-dev \
    libxslt1-dev \
    libffi-dev \
    libssl-dev \
    zlib1g-dev \
    git \
    postgresql-client \
    redis-tools \
    sed \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy requirements and install Python packages
COPY ./status-page/requirements.txt .
RUN pip install --upgrade pip
RUN pip install rq-scheduler --force-reinstall
RUN pip install -r requirements.txt

# Copy the application code
COPY ./status-page/ .

# Copy and configure settings for collectstatic (minimal config for static collection)
RUN cp /app/statuspage/statuspage/configuration_example.py /app/statuspage/statuspage/configuration.py
# Set dummy values for collectstatic (no DB needed)
RUN sed -i "s/'NAME': 'status-page'/'NAME': 'statuspage'/g" /app/statuspage/statuspage/configuration.py
RUN sed -i "s/'USER': ''/'USER': 'statuspage'/g" /app/statuspage/statuspage/configuration.py
RUN sed -i "s/'PASSWORD': ''/'PASSWORD': 'dummy'/g" /app/statuspage/statuspage/configuration.py
RUN sed -i "s/'HOST': 'localhost'/'HOST': 'dummy'/g" /app/statuspage/statuspage/configuration.py
RUN sed -i "s/ALLOWED_HOSTS = \[\]/ALLOWED_HOSTS = ['localhost']/g" /app/statuspage/statuspage/configuration.py
RUN sed -i 's|SITE_URL = ""|SITE_URL = "http://localhost"|g' /app/statuspage/statuspage/configuration.py
RUN sed -i "s/SECRET_KEY = ''/SECRET_KEY = 'dummy_key'/g" /app/statuspage/statuspage/configuration.py

# Collect static files
RUN ls -la /app/statuspage/ || true
RUN python3 /app/statuspage/manage.py collectstatic --noinput

# Second stage: Nginx with baked static files
FROM nginx:latest

# Copy collected static files from builder
COPY --from=builder /app/statuspage/static /app/static

# Copy nginx config
COPY ./nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80